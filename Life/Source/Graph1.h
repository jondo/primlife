#if !defined(AFX_GRAPH1_H__54607F40_5070_11D1_B2CD_00600831EAE4__INCLUDED_)
#define AFX_GRAPH1_H__54607F40_5070_11D1_B2CD_00600831EAE4__INCLUDED_

#if _MSC_VER >= 1000
#pragma once
#endif // _MSC_VER >= 1000
// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


// Dispatch interfaces referenced by this interface
class CPicture;

/////////////////////////////////////////////////////////////////////////////
// CGraph wrapper class

class CGraph : public CWnd
{
protected:
	DECLARE_DYNCREATE(CGraph)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0x842d100, 0x1e19, 0x101b, { 0x9a, 0xaf, 0x1a, 0x16, 0x26, 0x55, 0x1e, 0x7c } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR /*lpszClassName*/,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* /*pContext = NULL*/)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:
	long GetAutoInc();
	void SetAutoInc(long);
	long GetBackground();
	void SetBackground(long);
	CString GetBottomTitle();
	void SetBottomTitle(LPCTSTR);
	long GetColorData();
	void SetColorData(long);
	CString GetCtlVersion();
	void SetCtlVersion(LPCTSTR);
	long GetDataReset();
	void SetDataReset(long);
	long GetDrawMode();
	void SetDrawMode(long);
	long GetDrawStyle();
	void SetDrawStyle(long);
	short GetExtraData();
	void SetExtraData(short);
	short GetFontSize();
	void SetFontSize(short);
	long GetFontStyle();
	void SetFontStyle(long);
	long GetFontUse();
	void SetFontUse(long);
	long GetForeground();
	void SetForeground(long);
	CString GetGraphCaption();
	void SetGraphCaption(LPCTSTR);
	float GetGraphData();
	void SetGraphData(float);
	short GetGraphStyle();
	void SetGraphStyle(short);
	CString GetGraphTitle();
	void SetGraphTitle(LPCTSTR);
	long GetGraphType();
	void SetGraphType(long);
	long GetGridStyle();
	void SetGridStyle(long);
	CString GetImageFile();
	void SetImageFile(LPCTSTR);
	long GetIndexStyle();
	void SetIndexStyle(long);
	short GetLabelEvery();
	void SetLabelEvery(short);
	long GetLabels();
	void SetLabels(long);
	CString GetLabelText();
	void SetLabelText(LPCTSTR);
	CString GetLeftTitle();
	void SetLeftTitle(LPCTSTR);
	long GetLegendStyle();
	void SetLegendStyle(long);
	CString GetLegendText();
	void SetLegendText(LPCTSTR);
	long GetLineStats();
	void SetLineStats(long);
	short GetNumPoints();
	void SetNumPoints(short);
	short GetNumSets();
	void SetNumSets(short);
	long GetPalette();
	void SetPalette(long);
	short GetPatternData();
	void SetPatternData(short);
	long GetPatternedLines();
	void SetPatternedLines(long);
	long GetPrintStyle();
	void SetPrintStyle(long);
	long GetRandomData();
	void SetRandomData(long);
	long GetSeeThru();
	void SetSeeThru(long);
	long GetSymbolData();
	void SetSymbolData(long);
	long GetThickLines();
	void SetThickLines(long);
	short GetThisPoint();
	void SetThisPoint(short);
	short GetThisSet();
	void SetThisSet(short);
	short GetTickEvery();
	void SetTickEvery(short);
	long GetTicks();
	void SetTicks(long);
	float GetXPosData();
	void SetXPosData(float);
	float GetYAxisMax();
	void SetYAxisMax(float);
	float GetYAxisMin();
	void SetYAxisMin(float);
	long GetYAxisPos();
	void SetYAxisPos(long);
	long GetYAxisStyle();
	void SetYAxisStyle(long);
	short GetYAxisTicks();
	void SetYAxisTicks(short);
	CString GetDataFields();
	void SetDataFields(LPCTSTR);
	LPUNKNOWN GetDataSource();
	void SetDataSource(LPUNKNOWN);
	CString GetFontName();
	void SetFontName(LPCTSTR);
	long GetHot();
	void SetHot(long);
	CString GetLabelField();
	void SetLabelField(LPCTSTR);
	CString GetLegendField();
	void SetLegendField(LPCTSTR);
	BOOL GetEnabled();
	void SetEnabled(BOOL);
	short GetBorderStyle();
	void SetBorderStyle(short);
	OLE_HANDLE GetHWnd();
	void SetHWnd(OLE_HANDLE);

// Operations
public:
	void Refresh();
	void LockControl(BOOL Lock, BOOL Redraw);
	void AboutBox();
};

//{{AFX_INSERT_LOCATION}}
// Microsoft Developer Studio will insert additional declarations immediately before the previous line.

#endif // !defined(AFX_GRAPH1_H__54607F40_5070_11D1_B2CD_00600831EAE4__INCLUDED_)
